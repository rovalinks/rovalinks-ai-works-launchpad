name: Handle New Subscriber

permissions:
  contents: write

on:
  repository_dispatch:
    types: [new_subscriber]
  workflow_dispatch:
    inputs:
      email:
        description: 'Subscriber email'
        required: true
        type: string

jobs:
  add-subscriber:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set EMAIL variable
        run: |
          if [ -n "${{ github.event.client_payload.email }}" ]; then
            echo "EMAIL_VAL=${{ github.event.client_payload.email }}" >> $GITHUB_ENV
          else
            echo "EMAIL_VAL=${{ github.event.inputs.email }}" >> $GITHUB_ENV
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install pandas requests

      - name: Process subscriber and send email
        env:
          EMAIL: ${{ env.EMAIL_VAL }}
          ZEPTOMAIL_API_TOKEN: ${{ secrets.ZEPTOMAIL_API_TOKEN }}
        run: |
          python <<EOF
          import os
          import re
          import sys
          import pandas as pd
          from datetime import datetime, timezone
          import requests

          user_email = os.getenv("EMAIL")
          token = os.getenv("ZEPTOMAIL_API_TOKEN")
          from_email = "noreply@rovalinks.com"
          admin_email = "hr@rovalinks.com"

          headers = {
              "accept": "application/json",
              "content-type": "application/json",
              "authorization": f"Zoho-enczapikey {token}"
          }

          def is_valid_email(email):
              return re.match(r"[^@]+@[^@]+\\.[^@]+", email)

          def notify_admin(subject, html_body):
              payload = {
                  "from": {"address": from_email, "name": "Rovalinks AI"},
                  "to": [{"email_address": {"address": admin_email, "name": "Rovalinks HR"}}],
                  "subject": subject,
                  "htmlbody": html_body
              }
              try:
                  r = requests.post("https://api.zeptomail.in/v1.1/email", headers=headers, json=payload)
                  print(f"Admin notified ({subject}):", r.status_code)
              except Exception as e:
                  print("Failed to notify admin:", e)

          if not is_valid_email(user_email):
              notify_admin(
                  "[Error] Invalid subscriber email",
                  f"<html><body><h2 style='color:red'>‚ùå Invalid email</h2><p>{user_email}</p></body></html>"
              )
              sys.exit(1)

          try:
              filepath = "subscribers/users.csv"
              os.makedirs("subscribers", exist_ok=True)

              if os.path.exists(filepath):
                  df = pd.read_csv(filepath)
              else:
                  df = pd.DataFrame(columns=["email", "timestamp"])

              if user_email in df["email"].values:
                  raise Exception("User already subscribed.")

              df.loc[len(df)] = [user_email, datetime.now(timezone.utc).isoformat()]
              df.to_csv(filepath, index=False)

              welcome_html = f'''
              <html><body>
                <div style="background: linear-gradient(135deg, #5A67D8, #805AD5); padding: 30px; color: white; text-align: center;">
                  <h1>üéâ Welcome to Rovalinks AI Works!</h1>
                </div>
                <div style="padding: 30px;">
                  <p>Hi there,</p>
                  <p>Thanks for signing up for updates from <strong>Rovalinks AI Works</strong>!</p>
                  <p>You‚Äôll get early access, updates, and more!</p>
                  <a href="https://rovalinks.com" style="background:#5A67D8; color:white; padding:10px 20px; text-decoration:none; border-radius:5px;">Visit our site</a>
                  <p style="margin-top:20px;">‚Äì The Rovalinks Team</p>
                </div>
              </body></html>
              '''

              welcome_payload = {
                  "from": {"address": from_email, "name": "Rovalinks AI"},
                  "to": [{"email_address": {"address": user_email}}],
                  "subject": "üéâ Welcome to Rovalinks AI Works!",
                  "htmlbody": welcome_html
              }

              r = requests.post("https://api.zeptomail.in/v1.1/email", headers=headers, json=welcome_payload)
              r.raise_for_status()

              notify_admin(
                  f"‚úÖ New subscriber added: {user_email}",
                  f"<html><body><p>‚úÖ New subscriber: <strong>{user_email}</strong></p></body></html>"
              )

          except Exception as e:
              notify_admin(
                  "[Error] Subscription failed",
                  f"<html><body><h2 style='color:red'>‚ùå Subscription failed</h2><p>{str(e)}</p><p><strong>Email:</strong> {user_email}</p></body></html>"
              )
              sys.exit(1)
          EOF

      - name: Commit and Push CSV
        run: |
          git config user.name "rovalinks-bot"
          git config user.email "bot@rovalinks.com"
          
          if [ -n "$(git status --porcelain subscribers/users.csv)" ]; then
            git add subscribers/users.csv
            git commit -m "Add new subscriber: ${{ env.EMAIL_VAL }}"
            git push origin HEAD
          else
            echo "No changes to commit."
          fi
