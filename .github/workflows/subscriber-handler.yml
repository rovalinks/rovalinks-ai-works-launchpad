name: Handle New Subscriber

permissions:
  contents: write

on:
  repository_dispatch:
    types: [new_subscriber]
  workflow_dispatch:
    inputs:
      email:
        description: 'Subscriber email'
        required: true
        type: string

jobs:
  add-subscriber:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Debug email input
        run: |
          echo "Repo Dispatch Email: ${{ github.event.client_payload.email }}"
          echo "Manual Email: ${{ github.event.inputs.email }}"

      - name: Set EMAIL variable
        run: |
          echo "EMAIL_VAL=${{ github.event.client_payload.email || github.event.inputs.email }}" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install pandas
        run: pip install pandas

      - name: Install requests
        run: pip install requests

      - name: Check & Update Subscriber List
        id: check_sub
        run: |
          python <<EOF
          import os, pandas as pd
          from datetime import datetime

          email = os.getenv("EMAIL_VAL")
          os.makedirs("subscribers", exist_ok=True)
          filepath = "subscribers/users.csv"
          df = pd.read_csv(filepath) if os.path.exists(filepath) else pd.DataFrame(columns=["email", "timestamp"])

          if email in df["email"].values:
              status = "exists"
          else:
              df.loc[len(df)] = [email, datetime.utcnow().isoformat()]
              df.to_csv(filepath, index=False)
              status = "new"

          with open("subscribers/state.txt", "w") as f:
              f.write(status)
          EOF

      - name: Commit if new subscriber
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add subscribers/users.csv
          git commit -m "Add new subscriber: ${{ env.EMAIL_VAL }}" || echo "No changes to commit"
          git push

      - name: Set subscription state
        run: echo "SUB_STATE=$(cat subscribers/state.txt)" >> $GITHUB_ENV

      - name: Send email via ZeptoMail
        env:
          EMAIL: ${{ env.EMAIL_VAL }}
          SUB_STATE: ${{ env.SUB_STATE }}
          Z_API_TOKEN: ${{ secrets.ZEPTOMAIL_API_TOKEN }}
        run: |
          python <<EOF
          import os, json, requests

          user_email = os.environ["EMAIL"]
          sub_state = os.environ["SUB_STATE"]
          token = os.environ["Z_API_TOKEN"]

          from_email = "noreply@rovalinks.com"
          bounce_email = "noreply@rovalinks.com"
          admin_email = "hr@rovalinks.com"

          if sub_state == "new":
              subject = "ðŸŽ‰ Welcome to Rovalinks AI Works!"
              html = """
              <html>
              <body style="font-family: 'Segoe UI', sans-serif; background-color: #f4f6f8; padding: 0; margin: 0;">
                <div style="max-width: 600px; margin: 40px auto; background: #fff; border-radius: 8px; padding: 30px; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
                  <h1 style="color: #5A67D8;">ðŸŽ‰ Welcome to Rovalinks AI Works!</h1>
                  <p>Hi there,</p>
                  <p>Thank you for signing up for updates from <strong>Rovalinks AI Works</strong>!</p>
                  <p>Youâ€™ll get first access to new features, product launches, and updates.</p>
                  <p style="margin-top: 20px; font-size: 14px; background: #f0f1f5; padding: 10px; border-left: 4px solid #805AD5;">
                    ðŸ“¬ Check your spam/promotions folder and mark us as "Not Spam".
                  </p>
                  <a href="https://rovalinks.com" style="display: inline-block; margin-top: 20px; background: #5A67D8; color: #fff; padding: 12px 24px; border-radius: 6px; text-decoration: none; font-weight: bold;">Visit Our Website</a>
                  <p style="margin-top: 30px;">ðŸš€ Let's shape the future of AI â€” together.</p>
                  <p>â€“ The Rovalinks Team</p>
                </div>
              </body>
              </html>
              """
          else:
              subject = "You're already subscribed!"
              html = """
              <html>
              <body style="font-family: 'Segoe UI', sans-serif; background: #fffaf0; padding: 30px;">
                <div style="max-width: 600px; margin: auto; background: #fff; border: 1px solid #f5e0c0; border-radius: 8px; padding: 30px;">
                  <h2 style="color: #d18b00;">ðŸ‘‹ You're already subscribed!</h2>
                  <p>No worries â€” you're already on our list.</p>
                  <p>Stay tuned for product updates, early access, and AI breakthroughs.</p>
                  <p style="margin-top: 20px;">Visit <a href="https://rovalinks.com">rovalinks.com</a> for more.</p>
                </div>
              </body>
              </html>
              """

          payload = {
            "bounce_address": bounce_email,
            "from": {
              "address": from_email,
              "name": "Rovalinks AI"
            },
            "to": [
              {"email_address": {"address": user_email}},
              {"email_address": {"address": admin_email}} if sub_state == "new" else None
            ],
            "subject": subject,
            "htmlbody": html
          }

          # remove None from recipients
          payload["to"] = [x for x in payload["to"] if x is not None]

          headers = {
            "Authorization": f"Zoho-enczapikey {token}",
            "Content-Type": "application/json"
          }

          res = requests.post("https://api.zeptomail.in/v1.1/email", headers=headers, data=json.dumps(payload))
          res.raise_for_status()
          print("âœ… Email sent:", res.json())
          EOF
