name: Handle New Subscriber

permissions:
  contents: write

on:
  repository_dispatch:
    types: [new_subscriber]
  workflow_dispatch:
    inputs:
      email:
        description: 'Subscriber email'
        required: true
        type: string

jobs:
  add-subscriber:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Debug email
        run: |
          echo "EMAIL (repo_dispatch) = ${{ github.event.client_payload.email }}"
          echo "EMAIL (manual) = ${{ github.event.inputs.email }}"

      - name: Set EMAIL variable
        run: echo "EMAIL_VAL=${{ github.event.client_payload.email || github.event.inputs.email }}" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install pandas
        run: pip install pandas

      - name: Update subscribers CSV
        run: |
          python <<EOF
          import os, pandas as pd
          from datetime import datetime

          email = os.getenv("EMAIL_VAL")
          file = "subscribers/users.csv"
          df = pd.read_csv(file) if os.path.exists(file) else pd.DataFrame(columns=["email", "timestamp"])
          if email not in df["email"].values:
              df.loc[len(df)] = [email, datetime.utcnow().isoformat()]
              df.to_csv(file, index=False)
          EOF

      - name: Commit updated CSV
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add subscribers/users.csv
          git commit -m "Add new subscriber: ${{ env.EMAIL_VAL }}" || echo "No changes to commit"
          git push

      - name: Send welcome email via Zoho
        env:
          Z_EMAIL: ${{ secrets.Z_EMAIL }}
          Z_PASS: ${{ secrets.Z_PASS }}
          EMAIL: ${{ env.EMAIL_VAL }}
        run: |
          python <<EOF
          import smtplib
          from email.mime.multipart import MIMEMultipart
          from email.mime.text import MIMEText
          import os

          email = os.environ["EMAIL"]
          from_addr = os.environ["Z_EMAIL"]
          hr_addr = "hr@rovalinks.com"
          password = os.environ["Z_PASS"]

          msg = MIMEMultipart("alternative")
          msg["Subject"] = "Welcome to Rovalinks AI Works!"
          msg["From"] = from_addr
          msg["To"] = email

          html = """<html>Test Email</html>"""
          msg.attach(MIMEText(html, "html"))

          server = smtplib.SMTP_SSL("smtp.zoho.in", 465)
          server.login(from_addr, password)
          server.sendmail(from_addr, [email, hr_addr], msg.as_string())
          server.quit()
          EOF
