name: Handle New Subscriber

permissions:
  contents: write

on:
  repository_dispatch:
    types: [new_subscriber]
  workflow_dispatch:
    inputs:
      email:
        description: 'Subscriber email'
        required: true
        type: string

jobs:
  subscribe-user:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set EMAIL variable
        run: |
          if [ -n "${{ github.event.client_payload.email }}" ]; then
            echo "EMAIL_VAL=${{ github.event.client_payload.email }}" >> $GITHUB_ENV
          else
            echo "EMAIL_VAL=${{ github.event.inputs.email }}" >> $GITHUB_ENV
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install pandas requests

      - name: Add to CSV (if new)
        id: write_csv
        env:
          EMAIL: ${{ env.EMAIL_VAL }}
        run: |
          python <<EOF
          import os, pandas as pd, re, sys
          from datetime import datetime, timezone

          email = os.getenv("EMAIL")
          filepath = "subscribers/users.csv"
          os.makedirs("subscribers", exist_ok=True)

          def is_valid_email(e): return re.match(r"[^@]+@[^@]+\.[^@]+", e)
          if not is_valid_email(email):
              print(f"Invalid email: {email}")
              sys.exit(1)

          df = pd.read_csv(filepath) if os.path.exists(filepath) else pd.DataFrame(columns=["email", "timestamp"])

          if email in df["email"].values:
              print("User already exists.")
              with open("subscribers/state.txt", "w") as f: f.write("exists")
              sys.exit(0)

          df.loc[len(df)] = [email, datetime.now(timezone.utc).isoformat()]
          df.to_csv(filepath, index=False)
          with open("subscribers/state.txt", "w") as f: f.write("new")
          EOF

      - name: Commit and Push CSV
        id: git_push
        run: |
          git config user.name "rovalinks-bot"
          git config user.email "bot@rovalinks.com"

          if [ "$(cat subscribers/state.txt)" = "new" ]; then
            git add subscribers/users.csv
            git commit -m "Add new subscriber: ${{ env.EMAIL_VAL }}" || echo "Nothing to commit"
            git push origin HEAD || echo "push_failed" > subscribers/gitstate.txt
          fi

      - name: Check Git Success
        run: |
          if [ -f subscribers/gitstate.txt ]; then
            echo "GIT_SUCCESS=false" >> $GITHUB_ENV
          else
            echo "GIT_SUCCESS=true" >> $GITHUB_ENV
          fi

      - name: Send Emails (only if git success & user is new)
        if: env.GIT_SUCCESS == 'true'
        env:
          EMAIL: ${{ env.EMAIL_VAL }}
          ZEPTOMAIL_API_TOKEN: ${{ secrets.ZEPTOMAIL_API_TOKEN }}
        run: |
          python <<EOF
          import os, requests

          email = os.getenv("EMAIL")
          token = os.getenv("ZEPTOMAIL_API_TOKEN")
          from_email = "noreply@rovalinks.com"
          admin_email = "hr@rovalinks.com"

          headers = {
              "accept": "application/json",
              "content-type": "application/json",
              "authorization": f"Zoho-enczapikey {token}"
          }

          welcome_html = f'''
          <html><body>
            <div style="background: linear-gradient(135deg, #5A67D8, #805AD5); padding: 30px; color: white; text-align: center;">
              <h1>üéâ Welcome to Rovalinks AI Works!</h1>
            </div>
            <div style="padding: 30px;">
              <p>Hi there,</p>
              <p>Thanks for signing up for updates from <strong>Rovalinks AI Works</strong>!</p>
              <p>You‚Äôll get early access, updates, and more!</p>
              <a href="https://rovalinks.com" style="background:#5A67D8; color:white; padding:10px 20px; text-decoration:none; border-radius:5px;">Visit our site</a>
              <p style="margin-top:20px;">‚Äì The Rovalinks Team</p>
            </div>
          </body></html>
          '''

          admin_html = f"<html><body><p>‚úÖ New subscriber added: <strong>{email}</strong></p></body></html>"

          # Send welcome email
          welcome_payload = {
              "from": {"address": from_email, "name": "Rovalinks AI"},
              "to": [{"email_address": {"address": email}}],
              "subject": "üéâ Welcome to Rovalinks AI Works!",
              "htmlbody": welcome_html
          }
          requests.post("https://api.zeptomail.in/v1.1/email", headers=headers, json=welcome_payload).raise_for_status()

          # Notify admin
          admin_payload = {
              "from": {"address": from_email, "name": "Rovalinks AI"},
              "to": [{"email_address": {"address": admin_email}}],
              "subject": f"New subscriber added: {email}",
              "htmlbody": admin_html
          }
          requests.post("https://api.zeptomail.in/v1.1/email", headers=headers, json=admin_payload).raise_for_status()
          EOF

      - name: Notify Admin of Git Failure
        if: env.GIT_SUCCESS == 'false'
        env:
          EMAIL: ${{ env.EMAIL_VAL }}
          ZEPTOMAIL_API_TOKEN: ${{ secrets.ZEPTOMAIL_API_TOKEN }}
        run: |
          python <<EOF
          import os, requests

          email = os.getenv("EMAIL")
          token = os.getenv("ZEPTOMAIL_API_TOKEN")
          from_email = "noreply@rovalinks.com"
          admin_email = "hr@rovalinks.com"

          headers = {
              "accept": "application/json",
              "content-type": "application/json",
              "authorization": f"Zoho-enczapikey {token}"
          }

          html = f"<html><body><h2 style='color:red'>‚ùå Failed to save subscriber in CSV</h2><p>Email: {email}</p></body></html>"

          payload = {
              "from": {"address": from_email, "name": "Rovalinks AI"},
              "to": [{"email_address": {"address": admin_email}}],
              "subject": f"[Error] Failed to save subscriber: {email}",
              "htmlbody": html
          }

          requests.post("https://api.zeptomail.in/v1.1/email", headers=headers, json=payload)
          EOF
